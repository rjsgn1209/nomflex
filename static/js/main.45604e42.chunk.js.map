{"version":3,"sources":["assets/noPosterSmall.png","api.js","Components/Loading.js","Components/Poster.js","Routes/Home.js","Routes/TV.js","Routes/Search.js","Components/Header.js","Routes/Detail.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","movieApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Img","props","bgURL","Rating","span","ImgContainer","Title","Year","Poster","title","imgURL","rating","year","isMovie","to","require","default","role","length","substring","h1","Items","useState","nowPlaying","upcoming","popular","movies","setMovies","loading","setLoading","getMovie","a","data","results","console","log","useEffect","Helmet","Loading","map","movie","original_title","poster_path","release_date","substr","vote_average","topRated","airingToday","shows","setShows","getShow","show","original_name","first_air_date","Input","input","Form","form","movieResult","showResult","result","setResult","getResults","onSubmit","event","preventDefault","placeholder","value","onChange","target","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","Content","Cover","Data","ItemContainer","Divider","Overview","IMDB","VideoContainer","Video","iframe","SeriesContainer","Series","SeriesTitle","match","getDetail","includes","document","getElementById","runtime","episode_run_time","genres","genre","index","name","imdb_id","href","overview","videos","width","height","src","key","frameborder","allow","allowfullscreen","seasons","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.45604e42.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"3f87140df6fb96fbc6842d1d87751000\",\n    language: \"en-US\",\n  },\n});\n\nexport const movieApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", { params: { query: encodeURIComponent(term) } }),\n};\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nconst Container = styled.div`\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default () => <Container>Loading...</Container>;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div``;\n\nconst Img = styled.div`\n  background-image: url(${(props) => props.bgURL});\n  height: 200px;\n  background-size: cover;\n  border-radius: 5px;\n  background-position: center center;\n  transition: opecity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  font-size: 14px;\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n  transition: opecity 0.1s linear;\n`;\n\nconst ImgContainer = styled.div`\n  margin-bottom: 10px;\n  position: relative;\n  &:hover {\n    ${Img} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  display: block;\n  margin-bottom: 5px;\n\n  line-height: 14px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 100%;\n`;\n\nconst Year = styled.span`\n  font-size: 12px;\n  opacity: 0.6;\n`;\n\nconst Poster = ({ title, id, imgURL, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n    <Container>\n      <ImgContainer>\n        <Img\n          bgURL={\n            imgURL\n              ? `https://image.tmdb.org/t/p/w300/${imgURL}`\n              : require(\"../assets/noPosterSmall.png\").default\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating} / 10\n        </Rating>\n      </ImgContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imgURL: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React, { useState, useEffect } from \"react\";\nimport { movieApi } from \"../api\";\nimport styled from \"styled-components\";\nimport Loading from \"../Components/Loading\";\nimport Poster from \"../Components/Poster.js\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  margin: 15px;\n`;\n\nconst Title = styled.h1`\n  font-size: 14px;\n  font-weight: 600;\n  margin-bottom: 10px;\n`;\n\nconst Items = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  gap: 25px;\n  margin-bottom: 20px;\n`;\n\nexport default () => {\n  const [movies, setMovies] = useState({\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n  });\n\n  const [loading, setLoading] = useState(true);\n\n  const getMovie = async () => {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await movieApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await movieApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await movieApi.popular();\n\n      setMovies({ nowPlaying, upcoming, popular });\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(getMovie, []);\n  return (\n    <>\n      <Helmet>\n        <title>Movie | Nomflex</title>\n      </Helmet>\n      {loading ? (\n        <Loading />\n      ) : (\n        <Container>\n          <Title>Now Playing</Title>\n          <Items>\n            {movies.nowPlaying &&\n              movies.nowPlaying.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  title={movie.original_title}\n                  id={movie.id}\n                  imgURL={movie.poster_path}\n                  year={movie.release_date.substr(0, 4)}\n                  rating={movie.vote_average}\n                  isMovie={true}\n                />\n              ))}\n          </Items>\n          <Title>Upcoming</Title>\n          <Items>\n            {movies.upcoming &&\n              movies.upcoming.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  title={movie.original_title}\n                  id={movie.id}\n                  imgURL={movie.poster_path}\n                  year={movie.release_date.substr(0, 4)}\n                  rating={movie.vote_average}\n                  isMovie={true}\n                />\n              ))}\n          </Items>\n          <Title>Popular</Title>\n          <Items>\n            {movies.popular &&\n              movies.popular.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  title={movie.original_title}\n                  id={movie.id}\n                  imgURL={movie.poster_path}\n                  year={movie.release_date.substr(0, 4)}\n                  rating={movie.vote_average}\n                  isMovie={true}\n                />\n              ))}\n          </Items>\n        </Container>\n      )}\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { tvApi } from \"../api\";\nimport styled from \"styled-components\";\nimport Loading from \"../Components/Loading\";\nimport Poster from \"../Components/Poster.js\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  margin: 15px;\n`;\n\nconst Title = styled.h1`\n  font-size: 14px;\n  font-weight: 600;\n  margin-bottom: 10px;\n`;\n\nconst Items = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  gap: 25px;\n`;\n\nexport default () => {\n  const [shows, setShows] = useState({\n    topRated: null,\n    airingToday: null,\n    popular: null,\n  });\n\n  const [loading, setLoading] = useState(true);\n\n  const getShow = async () => {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n\n      setShows({ topRated, airingToday, popular });\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(getShow, []);\n  return (\n    <>\n      <Helmet>\n        <title>Show | Nomflex</title>\n      </Helmet>\n      {loading ? (\n        <Loading />\n      ) : (\n        <Container>\n          <Title>TopRated</Title>\n          <Items>\n            {shows.topRated &&\n              shows.topRated.map((show) => (\n                <Poster\n                  key={show.id}\n                  title={show.original_name}\n                  id={show.id}\n                  imgURL={show.poster_path}\n                  year={show.first_air_date.substr(0, 4)}\n                  rating={show.vote_average}\n                />\n              ))}\n          </Items>\n          <Title>AiringToday</Title>\n          <Items>\n            {shows.airingToday &&\n              shows.airingToday.map((show) => (\n                <Poster\n                  key={show.id}\n                  title={show.original_name}\n                  id={show.id}\n                  imgURL={show.poster_path}\n                  year={show.first_air_date.substr(0, 4)}\n                  rating={show.vote_average}\n                />\n              ))}\n          </Items>\n          <Title>Popular</Title>\n          <Items>\n            {shows.popular &&\n              shows.popular.map((show) => (\n                <Poster\n                  key={show.id}\n                  title={show.original_name}\n                  id={show.id}\n                  imgURL={show.poster_path}\n                  year={show.first_air_date.substr(0, 4)}\n                  rating={show.vote_average}\n                />\n              ))}\n          </Items>\n        </Container>\n      )}\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { movieApi, tvApi } from \"../api\";\nimport styled from \"styled-components\";\nimport Loading from \"../Components/Loading\";\nimport Poster from \"../Components/Poster.js\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  margin: 15px;\n`;\n\nconst Title = styled.h1`\n  font-size: 14px;\n  font-weight: 600;\n  margin-bottom: 10px;\n`;\n\nconst Items = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  gap: 25px;\n  margin-bottom: 20px;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  margin-bottom: 50px;\n`;\n\nexport default () => {\n  const [result, setResult] = useState({\n    movieResult: null,\n    showResult: null,\n    term: \"\",\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (result.term !== \"\") {\n      getResults();\n    }\n  };\n\n  const updateTerm = (event) => {\n    const {\n      target: { value: term },\n    } = event;\n    setResult({ term });\n  };\n\n  const getResults = async () => {\n    try {\n      setLoading(true);\n      const {\n        data: { results: movieResult },\n      } = await movieApi.search(result.term);\n      const {\n        data: { results: showResult },\n      } = await tvApi.search(result.term);\n\n      setResult({ movieResult, showResult });\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Search | Nomflex</title>\n      </Helmet>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"Search Movies or TV show...\"\n          value={result.term}\n          onChange={updateTerm}\n        />\n      </Form>\n      {loading ? (\n        <Loading />\n      ) : (\n        <>\n          {result.movieResult && (\n            <>\n              <Title>Movie Result</Title>\n              <Items>\n                {result.movieResult.map((movie) => (\n                  <Poster\n                    key={movie.id}\n                    title={movie.original_title}\n                    id={movie.id}\n                    imgURL={movie.poster_path}\n                    year={\n                      movie.release_date ? movie.release_date.substr(0, 4) : \"\"\n                    }\n                    rating={movie.vote_average}\n                    isMovie={true}\n                  />\n                ))}\n              </Items>\n            </>\n          )}\n\n          {result.showResult && (\n            <>\n              <Title>Show Result</Title>\n              <Items>\n                {result.showResult.map((show) => (\n                  <Poster\n                    key={show.id}\n                    title={show.original_name}\n                    id={show.id}\n                    imgURL={show.poster_path}\n                    year={\n                      show.first_air_date\n                        ? show.first_air_date.substr(0, 4)\n                        : \"\"\n                    }\n                    rating={show.vote_average}\n                  />\n                ))}\n              </Items>\n            </>\n          )}\n        </>\n      )}\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"white\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React, { useState, useEffect } from \"react\";\nimport { movieApi, tvApi } from \"../api\";\nimport Helmat from \"react-helmet\";\nimport Loading from \"../Components/Loading\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-image: url(${(props) => props.imgURL});\n  height: 100%;\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  position: relative;\n  height: 100%;\n  width: 100%;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  background-image: url(${(props) => props.imgURL});\n  border-radius: 5px;\n  height: 100%;\n  width: 30%;\n  background-size: cover;\n  background-position: center center;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.span`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 10px 0px;\n  font-size: 12px;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0px 10px;\n`;\n\nconst Overview = styled.div`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 2;\n  width: 50%;\n`;\n\nconst IMDB = styled.a`\n  color: black;\n  font-size: 10px;\n  font-weight: 600;\n  background: linear-gradient(to right, gold 0%, aqua 50%, pink 100%);\n  padding: 3px 2px;\n  border-radius: 5px;\n  border: white solid 1px;\n`;\n\nconst VideoContainer = styled.div`\n  margin: 20px 0px;\n`;\n\nconst Video = styled.iframe`\n  margin-right: 20px;\n`;\n\nconst SeriesContainer = styled.div`\n  display: flex;\n  overflow: scroll;\n`;\n\nconst Series = styled.div`\n  margin-right: 20px;\n  height: 200px;\n  width: 130px;\n  border-radius: 5px;\n  background-image: url(${(props) => props.imgURL});\n  background-size: cover;\n  background-position: center center;\n`;\n\nconst SeriesTitle = styled.span``;\n\nexport default ({\n  location: { pathname },\n  match: {\n    params: { id },\n  },\n}) => {\n  const [result, setResult] = useState();\n  const [loading, setLoading] = useState(true);\n\n  const getDetail = async () => {\n    try {\n      if (pathname.includes(\"/tv/\")) {\n        const { data: result } = await tvApi.showDetail(id);\n        setResult(result);\n      } else {\n        const { data: result } = await movieApi.movieDetail(id);\n        setResult(result);\n      }\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setLoading(false);\n    }\n  };\n  {\n    console.log(document.getElementById(\"series\"));\n  }\n  useEffect(getDetail, []);\n  return loading ? (\n    <>\n      <Helmat>\n        <title>Loading | Nomflex</title>\n        <Loading />\n      </Helmat>\n    </>\n  ) : (\n    <Container>\n      <Helmat>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflex\n        </title>\n      </Helmat>\n      <Backdrop\n        imgURL={`https://image.tmdb.org/t/p/original/${result.poster_path}`}\n      />\n      <Content>\n        <Cover\n          imgURL={`https://image.tmdb.org/t/p/original/${result.poster_path}`}\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substr(0, 4)\n                : result.first_air_date.substr(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index !== result.genres.length - 1\n                    ? ` ${genre.name} /`\n                    : ` ${genre.name}`\n                )}\n            </Item>\n\n            {result.imdb_id && (\n              <>\n                <Divider>•</Divider>\n                <Item>\n                  <IMDB href={`http://www.imdb.com/title/${result.imdb_id}`}>\n                    IMDB\n                  </IMDB>\n                </Item>\n              </>\n            )}\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          <VideoContainer>\n            {result.videos.results.length > 0 && result.videos.results[0] && (\n              <Video\n                width=\"560\"\n                height=\"315\"\n                src={`https://www.youtube.com/embed/${\n                  result.videos.results[result.videos.results.length - 1].key\n                }`}\n                title=\"YouTube video player\"\n                frameborder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowfullscreen\n              ></Video>\n            )}\n\n            {result.videos.results.length > 0 && result.videos.results[1] && (\n              <Video\n                width=\"560\"\n                height=\"315\"\n                src={`https://www.youtube.com/embed/${\n                  result.videos.results[result.videos.results.length - 2].key\n                }`}\n                title=\"YouTube video player\"\n                frameborder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowfullscreen\n              ></Video>\n            )}\n          </VideoContainer>\n          <SeriesContainer id=\"series\">\n            {result.seasons &&\n              result.seasons.map((movie) => (\n                <div>\n                  <SeriesTitle>{movie.name}</SeriesTitle>\n                  {movie.poster_path ? (\n                    <Series\n                      imgURL={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n                    ></Series>\n                  ) : (\n                    <Series\n                      imgURL={require(\"../assets/noPosterSmall.png\").default}\n                    ></Series>\n                  )}\n                </div>\n              ))}\n          </SeriesContainer>\n        </Data>\n      </Content>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Header from \"Components/Header\";\nimport Detail from \"../Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/tv/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color: inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\n        font-size:12px;\n        background-color: rgba(20,20,20,1);\n        color:white;\n        padding-top:50px\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}